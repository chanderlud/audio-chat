// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// These functions are ignored because they are not marked as `pub`: `record_to_formatted`
// These types are ignored because they are not used by any `pub` functions: `GAG`, `SEND_TO_DART_LOGGER_STREAM_SINK`
// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `deref`, `deref`, `do_logs`, `initialize`, `initialize`

Future<void> initLogger() => RustLib.instance.api.crateApiLoggerInitLogger();

Stream<String> createLogStream() =>
    RustLib.instance.api.crateApiLoggerCreateLogStream();

void rustSetUp() => RustLib.instance.api.crateApiLoggerRustSetUp();

class SendToDartLogger {
  const SendToDartLogger();

  static Stream<String> setStreamSink() =>
      RustLib.instance.api.crateApiLoggerSendToDartLoggerSetStreamSink();

  @override
  int get hashCode => 0;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SendToDartLogger && runtimeType == other.runtimeType;
}
