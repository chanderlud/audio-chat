// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.36.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

// The type `GAG` is not used by any `pub` functions, thus it is ignored.
// The type `SEND_TO_DART_LOGGER_STREAM_SINK` is not used by any `pub` functions, thus it is ignored.

Future<void> initLogger({dynamic hint}) =>
    RustLib.instance.api.crateApiLoggerInitLogger(hint: hint);

Stream<String> createLogStream({dynamic hint}) =>
    RustLib.instance.api.crateApiLoggerCreateLogStream(hint: hint);

void rustSetUp({dynamic hint}) =>
    RustLib.instance.api.crateApiLoggerRustSetUp(hint: hint);

class SendToDartLogger {
  const SendToDartLogger();

  static Stream<String> setStreamSink({dynamic hint}) => RustLib.instance.api
      .crateApiLoggerSendToDartLoggerSetStreamSink(hint: hint);

  @override
  int get hashCode => 0;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SendToDartLogger && runtimeType == other.runtimeType;
}
